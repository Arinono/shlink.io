{% extends 'api-docs.html.twig' %}

{% block apiContent %}
    <header>
        <h3>Authentication</h3>
    </header>
    <p>All the endpoints require authentication. In order to do it you have to call to the special <code>/rest/authenticate</code> endpoint, which will return a token.</p>
    <p>This endpoint expects an API key to be provided. API keys are generated (and managed) from the command line. Run the <code>api-key:generate</code> command to get a new and valid API key.</p>
    <blockquote>At the <a href="{{ path('api-docs-section', {'slug': 'endpoints'}) }}">Endpoints</a> section you can find more information about how to perform the authentication request.</blockquote>

    <p>The token will expire after a week. You will have to pass it on every request in the <code>Authorization</code> header with <code>Bearer</code> authorization type, and every response will return the <code>Authorization</code> header as well, with a refreshed token which will last another week.</p>
    <p><b>Example:</b> <code>Authorization: Bearer eyJ0eX...</code></p>
    <p>If a token is not provided or the token has expired, the server will return an error like this, with a status 401:</p>
    <pre>
        <code>{
    "error": "INVALID_AUTH_TOKEN",
    "message": "Missing or invalid auth token provided. Perform a new authentication request and send provided token on every new request on the \"Authorization\" header"
}</code>
    </pre>
    <p>If the token was properly provided in the <code>Authorization</code> header but the authorization type is missing or has any value different than <code>Bearer</code>, the server will return one of these errors, with status 401.</p>
    <pre>
        <code>{
    "error": "INVALID_AUTHORIZATION",
    "message": "You need to provide the Bearer type in the Authorization header."
}</code>
    </pre>
    <pre>
        <code>{
    "error": "INVALID_AUTHORIZATION",
    "message": "Provided authorization type &lt;type&gt; is not supported. Use Bearer instead."
}</code>
    </pre>
    <p>All the tokens generated by Shlink's REST API follow the JSON Web Token standard. You can read about it at <a href="https://jwt.io" target="_blank">jwt.io</a>.</p>
{% endblock %}
